/* ============================================================
     CONTAINER CLASS & UTILITIES
   ============================================================ */

.container {
  width: 100%;
  max-width: 90rem;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--padding-global);
  padding-right: var(--padding-global);
}

/* Container Padding Utilities */

.container--no-padding {
  padding-left: 0;
  padding-right: 0;
}

.container--narrow {
  max-width: 48rem; /* 768px */
}

.container--wide {
  max-width: 120rem; /* 1920px */
}

.container--full {
  width: 100vw;
  margin-left: 0;
  margin-right: 0;
  padding-left: 0;
  padding-right: 0;
}

/* =================================================
       FLEXBOX UTILITIES
   ================================================= */

/* Enable flexbox layout on an element */
.display-flex {
  display: flex;
}

/* Arrange flex items horizontally (row direction) */
.flex-row {
  flex-direction: row;
}

/* Arrange flex items vertically (column direction) */
.flex-column {
  flex-direction: column;
}

/* Allow flex items to wrap onto multiple lines */
.flex-wrap {
  flex-wrap: wrap;
}

/* Align flex items to the start of the main axis */
.justify-content-start {
  justify-content: flex-start;
}

/* Center flex items along the main axis */
.justify-content-center {
  justify-content: center;
}

/* Align flex items to the end of the main axis */
.justify-content-end {
  justify-content: flex-end;
}

/* Distribute flex items with space between them */
.justify-content-between {
  justify-content: space-between;
}

/* Align flex items to the start of the cross axis */
.align-items-start {
  align-items: flex-start;
}

/* Center flex items along the cross axis */
.align-items-center {
  align-items: center;
}

/* Align flex items to the end of the cross axis */
.align-items-end {
  align-items: flex-end;
}

/* =====================================================
       GRID UTILITIES
   ================================================== */

.grid-1 {
  column-gap: var(--grid-gap-standard);
  row-gap: var(--grid-gap-standard);
  grid-template-rows: auto;
  grid-auto-columns: 1fr;
  grid-template-columns: var(--grid-1);
  display: grid;
}

.grid-2 {
  column-gap: var(--grid-gap-standard);
  row-gap: var(--grid-gap-standard);
  grid-template-rows: auto;
  grid-auto-columns: 1fr;
  grid-template-columns: var(--grid-2);
  display: grid;
}

.grid-3 {
  column-gap: var(--grid-gap-standard);
  row-gap: var(--grid-gap-standard);
  grid-template-rows: auto;
  grid-auto-columns: 1fr;
  grid-template-columns: var(--grid-3);
  display: grid;
}

.grid-4 {
  column-gap: var(--grid-gap-standard);
  row-gap: var(--grid-gap-standard);
  grid-template-rows: auto;
  grid-auto-columns: 1fr;
  grid-template-columns: var(--grid-4);
  display: grid;
}

/* Mobile iPad */
@media screen and (max-width: 991px) {
  .grid-3,
  .grid-4 {
    grid-template-columns: var(--grid-1);
  }
}

/* Mobile Landscape */
@media screen and (max-width: 767px) {
  .grid-2 {
    grid-template-columns: var(--grid-1);
  }
}

/* =================================================
       GAP UTILITIES
   ================================================= */

.gap-standard {
  gap: var(--grid-gap-standard);
}

.gap-2rem {
  gap: var(--grid-gap-2rem);
}

.gap-1rem {
  gap: var(--grid-gap-1rem);
}

.gap-0-5rem {
  gap: var(--grid-gap-0-5rem);
}

/* =================================================
       MARGIN UTILITIES
   ================================================= */

/* Center an element horizontally via automatic left and right margins */
.margin-auto {
  margin-left: auto;
  margin-right: auto;
}
