/* ***************************** */
/* HEADER */
/* ***************************** */

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: var(--color-neutral-darkest);

  /* set header (navigation) to a fixed height. Setting it to fix height so we can make it sticky */
  height: 6rem;
  padding: 0 4.8rem;
  position: relative;
}

.nav-logo {
  height: 6rem;
  width: 100%;
  filter: invert();
  filter: brightness(100);
}

/* ***************************** */
/* NAVIGATION */
/* ***************************** */

/* main nav list */
.nav-list {
  list-style: none;
  display: flex;
  align-items: center;
  gap: 3rem;
}

/* individual nav links */
/* always apply inline-block to nav links */
/* transition is applied to the main state */
.nav-link:link,
.nav-link:visited {
  display: inline-block;
  text-decoration: none;
  color: var(--theme-text-dark);
  font-weight: 500;
  font-size: 1rem;
  transition: all 0.3s;
}

.nav-link:hover,
.nav-link:active {
  color: var(--color-neutral-lighter);
}

/* Nav CTA Button */
/* use and selector to make sure this always applies when the combo class is on .main-nav-link */
.nav-link.nav-cta:link,
.nav-link.nav-cta:visited {
  padding: 1rem 2rem;
  border-radius: 9px;
  color: #fff;
  background-color: #e67e22;
}

.nav-link.nav-cta:hover,
.nav-link.nav-cta:active {
  background-color: #cf711f;
}

/* MOBILE */

.btn-mobile-nav {
  border: none;
  background: none;
  cursor: pointer;

  /* by default for normal width the button is hidden */
  display: none;
}

.icon-mobile-nav {
  height: 2rem;
  width: 2rem;
  color: var(--theme-text-dark);
}
/* the button to hide initially based on attributes instead of creating a completely different class */
.icon-mobile-nav[name="close-outline"] {
  display: none;
}

/* STICKY NAVIGATION */

/* We are adding the sticky class to the body. And will apply all styles to the header only if the sticky class is a parent of the header */
.sticky .header {
  position: fixed;
  top: 0;
  bottom: 0;
  width: 100%;
  /* important to have fixed height. Further note will be in JS file */
  height: 8rem;
  padding-top: 0;
  padding-bottom: 0;
  background-color: rgba(255, 255, 255, 0.971);
  z-index: 999;
  box-shadow: 0 0.85rem 2rem rgba(0, 0, 0, 0.03);
}
/* Add margin-top to compensate for when the header is sticky. This will push down section hero and make it so that the sticky header is not over the logo bar just after section hero. In order to add margin-top to the section hero, we need it to be a parent element. So we add .sticky to the body like we do above for the header, which will make .sticky the parent element */
.sticky .section-hero {
  margin-top: 6rem;
}

/* ***************************** */
/* BELOW 1200PX (Landscape Tablets) */
/* ***************************** */

@media (max-width: 75em) {
  .header {
    padding: 0 2rem;
  }

  .nav-list {
    gap: 1.5rem;
  }
}

/* ***************************** */
/* BELOW 944PX (Tablets) */
/* ***************************** */

@media (max-width: 59em) {
  /* MOBILE NAVIGATION */

  .btn-mobile-nav {
    display: block;
    z-index: 9999;
  }

  /* positioning in relation to the entire view point, so don't need to make the header relative */
  .navbar {
    background-color: var(--theme-background--dark-2);
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(5px);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    transform: translateX(100%);

    display: flex;
    align-items: center;
    justify-content: center;

    /* using ease-in, which is the third value that you can specify in transitions */
    transition: all 0.5s ease-in;
    /* transition: none; */

    /* Hide navigation */
    /* display none allows no transitions at all, so we will find another way */
    /* display:none; */

    /* 1) Hide element visually */
    opacity: 0;

    /* 2) Make it unaccessible to mouse and keyboard */
    pointer-events: none;

    /* 3) Hide it from screen readers */
    visibility: hidden;
    z-index: 999;
  }

  /* when we open nav, we must reset all the steps from above */
  .nav-open .navbar {
    opacity: 1;
    pointer-events: auto;
    visibility: visible;
    transform: translateX(0%);
    /* transition: transform 0.5s ease-in, opacity 0.5s ease-in; */
  }
  /* make the close icon visible - We use display because we don't need an animation to for this icon We add .nav-open so that only when this selector exist it will show*/
  .nav-open .icon-mobile-nav[name="close-outline"] {
    display: block;
  }

  /* hide the hamburger menu when .nav-open is on the page */
  .nav-open .icon-mobile-nav[name="menu-outline"] {
    display: none;
  }

  .nav-list {
    flex-direction: column;
    gap: 1.5rem;
  }

  .nav-link:link,
  .nav-link:visited {
    font-size: 1rem;
  }
}
